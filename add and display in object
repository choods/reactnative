import React, { useState } from 'react';
import { View, Text, TextInput, Button, StyleSheet, TouchableOpacity } from 'react-native';

export default function App() {
  const [objects, setObjects] = useState([]);
  const [firstName, setFirstName] = useState('');
  const [lastName, setLastName] = useState('');
  const [address, setAddress] = useState('');
  const [mobile, setMobile] = useState('');

  const addObject = () => {
    if (firstName && lastName && address && mobile) {
      setObjects([...objects, { firstName, lastName, address, mobile }]);
      setFirstName('');
      setLastName('');
      setAddress('');
      setMobile('');
    }
  };

  const deleteObject = (index) => {
    const newObjects = objects.filter((_, i) => i !== index);
    setObjects(newObjects);
  };

  return (
    <View style={styles.container}>
      <Text style={styles.title}>Personal Information</Text>

      <View style={styles.nameContainer}>
        <TextInput
          style={styles.input1}
          placeholder="First Name"
          value={firstName}
          onChangeText={setFirstName}
        />
        <TextInput
          style={styles.input1}
          placeholder="Last Name"
          value={lastName}
          onChangeText={setLastName}
        />
      </View>

      <TextInput
        style={styles.input2}
        placeholder="Address"
        value={address}
        onChangeText={setAddress}
      />

      <TextInput
        style={styles.input2}
        placeholder="Mobile"
        value={mobile}
        onChangeText={setMobile}
        keyboardType="phone-pad"
      />

      <TouchableOpacity style={styles.button} onPress={addObject}>
        <Text style={styles.buttonText}>Add Object</Text>
      </TouchableOpacity>

      <View style={styles.listContainer}>
        {objects.map((obj, index) => (
          <View key={index} style={styles.item}>
            <Text>First Name: {obj.firstName}</Text>
            <Text>Last Name: {obj.lastName}</Text>
            <Text>Address: {obj.address}</Text>
            <Text>Mobile: {obj.mobile}</Text>

            {/* Delete Button */}
            <TouchableOpacity 
              style={styles.deleteButton} 
              onPress={() => deleteObject(index)}>
              <Text style={styles.deleteButtonText}>Delete</Text>
            </TouchableOpacity>
          </View>
        ))}
      </View>
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    padding: 20,
  },
  title: {
    fontSize: 20,
    fontWeight: 'bold',
    marginBottom: 20,
  },
  input1: {
    width: '49%',
    height: 40,
    borderColor: 'gray',
    borderWidth: 1,
    paddingLeft: 8,
    borderRadius: 15,
  },

  input2: {
    width: '100%',
    height: 40,
    borderColor: 'gray',
    borderWidth: 1,
    paddingLeft: 8,
    marginBottom: 15,
    borderRadius: 15,
  },
  
  button: {
    backgroundColor: 'black',
    borderRadius: 15,
    paddingVertical: 12,
    paddingHorizontal: 40,
    marginBottom: 20,
    alignItems: 'center',
  },
  buttonText: {
    color: 'white',
    fontSize: 16,
    fontWeight: 'bold',
  },

  nameContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    width: '100%',
    marginBottom: 15,
  },
  
  listContainer: {
    marginTop: 20,
    width: '100%',
  },
  
  item: {
    marginBottom: 10,
    padding: 10,
    borderWidth: 1.5,
    borderColor: 'gray',
    borderRadius: 5,
  },

  deleteButton: {
    marginTop: 10,
    backgroundColor: '#f44336',
    paddingVertical: 8,
    paddingHorizontal: 20,
    borderRadius: 5,
    alignItems: 'center',
  },

  deleteButtonText: {
    color: 'white',
    fontSize: 14,
    fontWeight: 'bold',
  }
});
